# -*- coding: cp936 -*-
from PyQt4.QtCore import *
from PyQt4.QtGui import *



class FixedActivityModels(QWidget):
    def __init__(self, parent=None):
        super(FixedActivityLocationChoiceGenerator,self).__init__(parent)
        
        self.setWindowTitle('Fixed Activity Location Choice Generator')
        size =  parent.geometry()
        # These two global variables are used in paintevent.
        global widgetwidth, widgetheight
        widgetwidth = size.width()
        widgetheight = size.height()
        
        workersbutton = QPushButton('Workers', self)
        workersbutton.setGeometry((size.width())/2-100, 20,200, 50)

        self.connect(workers, SIGNAL('clicked()'),
                     qApp, SLOT('Close()'))


        
        children_adultbutton = QPushButton('Children (Status ¨C \nSchool) + Adult \n(Status-School)', self)
        children_adultbutton.setGeometry((size.width())/2-100, 90, 200, 90)

        
        childrenbutton = QPushButton('Children (Status ¨C \nPre-school)', self)
        childrenbutton.setGeometry((size.width())/2-100, 200, 200, 50)


        worklocbutton = QPushButton('For each job identify \na primary work location;\n\n\nDuring simulation, \ngenerate Choice Sets \nconditional on the home \nlocation e.g. within a 90 \nmin or 120 min travel time\n\nWork related trips/\nactivities will be generated \nduring the open periods to \naccount for multiple job \nsites per job', self)
        worklocbutton.setGeometry((size.width())/2-100, 270, 200, 110)


        schoollocbutton = QPushButton('School location choice\n\nDuring simulation, \ngenerate Choice Sets \nconditional on the home \nlocation e.g. within a 60 \nmin', self)
        schoollocbutton.setGeometry((size.width())/2-100, 400, 200, 70)


        preschoollocbutton = QPushButton('Pre-school location \nchoice\n\nDuring simulation, \ngenerate Choice Sets \nthat are within a 20 \nminute driving distance \nfrom home or work \nlocation of the adult(s)\n\nAlternatively just identify\n possible locations similar \nto school location', self)
        School_status.setGeometry((size.width())/2-100, 490, 200, 50)


        activitylocbutton = QPushButton('Fixed activity locations for all individuals within the population', self)
        School_status.setGeometry((size.width())/2-100, 490, 200, 50)

    def paintEvent(self, parent = None):
        line = QPainter()
        line.begin(self)
        pen = QPen(Qt.black,2,Qt.SolidLine)
        line.setPen(pen)
        line.drawLine((widgetwidth)/2, 70, (widgetwidth)/2, 90)
        line.drawLine((widgetwidth)/2, 180, (widgetwidth)/2, 200)
        line.drawLine((widgetwidth)/2, 250, (widgetwidth)/2, 270)
        line.drawLine((widgetwidth)/2, 380, (widgetwidth)/2, 400)
        line.drawLine((widgetwidth)/2, 470, (widgetwidth)/2, 490)
        line.end()



